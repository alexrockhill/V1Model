#
# Save command line arguments to text file
#

if [ -e ./bin/args.txt ]; then
	rm ./bin/args.txt
fi

if [ -e ./bin/args2.txt ]; then
	rm ./bin/args2.txt
fi

echo -n >> ./bin/args.txt

for ((i=0;i<"$#";++i)); do
	arg=${!i}
    if [ "${arg:0:2}" == "--" ]; then
    	if [[ ! "${arg:2:${#arg}-1}" =~ ^(loc|lat|loc_mu|lat_mu|loc_sig|lat_sig|dim|oris|seed|n_steps|leak)$ ]]; then
	    	echo "flag ${arg} not recognized"
            return
        else
        	j=$(($i+1))
        	echo "$arg ${!j}" >> ./bin/args.txt
        fi
    fi
done

keywords=(     --loc_mu --lat_mu --loc_sig --lat_sig --dim --oris --seed     --loc       --lat       --n_steps    --leak)
default_args=(    0.5     0.01       45         2       20     12    313     mexican_hat gaussian       15        0.5)
keyword2=$(cut -d' ' -f1 ./bin/args.txt)
echo $keyword2 | tr " " "\n" >> ./bin/args2.txt
for ((i=0;i<${#keywords[@]};++i)); do
	if ! [[ "${keywords[i]}" =~  $(echo ^\($(paste -sd'|' ./bin/args2.txt)\)$) ]]; then
		echo "${keywords[i]} ${default_args[i]}" >> ./bin/args.txt
	fi
done

rm ./bin/args2.txt

#
# Compile libc files
#

Compile()
{
if [ $2 == 1 ]; then
    cc -c ./libc/$1.c -I/opt/X11/include #-L/opt/X11/lib
else
    cc -c ./libc/$1.c
fi
ar ruv ./lib/lib$1.a $1.o
ranlib ./lib/lib$1.a
rm -f ./$1.o
}

Compile plot 1
Compile network 0
Compile random 0

#
#  Compile 'V1m', the main program
#
   cd src

  cc -O2 -o ../bin/v1m v1m.c -L../lib -I../libc \
  -L/opt/X11/lib -I/opt/X11/include \
  -lGL -lX11 -lpng -lplot -lnetwork -lrandom

   cd ..

# 
# Run 'V1m', the main program
#

./bin/v1m

#
# Combine png outputs into avi video
#

COUNTER=0
while [ -f "dpy/v1network$COUNTER.mp4" ]
do
	echo "$COUNTER"
	COUNTER=$[$COUNTER +1]
done

ffmpeg -framerate 2 -start_number 2 -i dpy/%d.png "v1network$COUNTER.mp4" && rm dpy/*.png && mv "v1network$COUNTER.mp4" dpy/ || echo "ffmeg not installed, skipping conversion to video"
